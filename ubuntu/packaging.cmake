SET(CPACK_STRIP_FILES TRUE)

INSTALL( FILES "${SVG_ICON_FILE}" DESTINATION share/icons/hicolor/scalable/apps RENAME ${PROJECT_NAME}.svg )

FIND_PROGRAM(RSVG_CONVERT NAMES rsvg-convert)
MARK_AS_ADVANCED(RSVG_CONVERT)

FOREACH( SIZE "16" "32" "48" "64" "128" "256" )
  ADD_CUSTOM_COMMAND( OUTPUT icon_${SIZE}x${SIZE}.png
                      COMMAND ${RSVG_CONVERT} -w ${SIZE} -h ${SIZE} ${SVG_ICON_FILE} -o icon_${SIZE}x${SIZE}.png
                      DEPENDS ${SVG_ICON_FILE}
                    )
  ADD_CUSTOM_TARGET(icon_${SIZE}x${SIZE} ALL DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/icon_${SIZE}x${SIZE}.png)
  INSTALL( FILES "${CMAKE_CURRENT_BINARY_DIR}/icon_${SIZE}x${SIZE}.png"
           DESTINATION share/icons/hicolor/${SIZE}x${SIZE}/apps RENAME ${PROJECT_NAME}.png )
ENDFOREACH()

SET( DESKTOP_FILE_VERSION    "${PROJECT_VERSION}" )
SET( DESKTOP_FILE_NAME       "${PROJECT_NAME}" )
SET( DESKTOP_FILE_COMMENT    "" )
SET( DESKTOP_FILE_EXEC       "gadget_shell.sh" )
SET( DESKTOP_FILE_ICON       "${PROJECT_NAME}" )
SET( DESKTOP_FILE_TERMINAL   "true" )
SET( DESKTOP_FILE_TYPE       "Application" )
SET( DESKTOP_FILE_CATEGORIES "Utiltiy;Application;" )

SET( DESKTOP_FILE "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}.desktop" )
CONFIGURE_FILE( "${CMAKE_SOURCE_DIR}/ubuntu/desktopfile.in" "${DESKTOP_FILE}" )
INSTALL( FILES "${DESKTOP_FILE}" DESTINATION share/applications )

#License file
INSTALL( FILES "${CMAKE_SOURCE_DIR}/LICENSE"
         RENAME "copyright"
         DESTINATION "share/doc/${CPACK_PACKAGE_FILE_NAME}/"
         PERMISSIONS
         OWNER_WRITE OWNER_READ
         GROUP_READ
         WORLD_READ )

#changelog
EXECUTE_PROCESS( COMMAND gzip -9 -c ${CMAKE_SOURCE_DIR}/ubuntu/changelog
                 WORKING_DIRECTORY ${PROJECT_BINARY_DIR}
                 OUTPUT_FILE "${CMAKE_BINARY_DIR}/changelog.gz" )
INSTALL( FILES "${CMAKE_BINARY_DIR}/changelog.gz"
         DESTINATION "share/doc/${CPACK_PACKAGE_FILE_NAME}/")

SET( CPACK_GENERATOR                 "DEB")
SET( CPACK_DEBIAN_PACKAGE_MAINTAINER "Next Thing Co" )
SET( CPACK_DEBIAN_PACKAGE_SHLIBDEPS  ON )
SET( CPACK_DEBIAN_PACKAGE_DEPENDS "docker | docker-ce | docker-ee | docker.io | docker-engine | docker-engine-cs" )
SET( CPACK_PACKAGE_NAME "gadgetos-cli" )
SET( CPACK_PACKAGE_DESCRIPTION "Gadget command line interface" )
SET( CPACK_PACKAGE_DESCRIPTION_SUMMARY ${CPACK_PACKAGE_DESCRIPTION} )
set (CPACK_PACKAGE_RELEASE "1")
set (CPACK_DEBIAN_PACKAGE_REVISION ${CPACK_PACKAGE_RELEASE})

# following code taken form here: https://cmake.org/pipermail/cmake/2010-July/038243.html

string(TOLOWER "${CPACK_PACKAGE_NAME}" CPACK_PACKAGE_NAME_LOWERCASE)
find_program(DPKG_PROGRAM dpkg DOC "dpkg program of Debian-based systems")
if(DPKG_PROGRAM)
  execute_process(
    COMMAND ${DPKG_PROGRAM} --print-architecture
    OUTPUT_VARIABLE CPACK_DEBIAN_PACKAGE_ARCHITECTURE
    OUTPUT_STRIP_TRAILING_WHITESPACE
  )
  set(CPACK_PACKAGE_FILE_NAME
"${CPACK_PACKAGE_NAME_LOWERCASE}_${PROJECT_VERSION}-${CPACK_DEBIAN_PACKAGE_REVISION}_${CPACK_DEBIAN_PACKAGE_ARCHITECTURE}")

else(DPKG_PROGRAM)
  set(CPACK_PACKAGE_FILE_NAME
"${CPACK_PACKAGE_NAME_LOWERCASE}_${PROJECT_VERSION}-${CPACK_DEBIAN_PACKAGE_REVISION}_${CMAKE_SYSTEM_NAME}")
endif(DPKG_PROGRAM)
